{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "http://json.openmrs.org/form.schema.json",
  "$comment": "This schema is intended to guide authors of forms built for use in O3",
  "title": "O3 Form schema",
  "description": "This schema defines the expected values of a form schema built using the O3 Form Builder. These schemas are used to build forms for use in O3. The schema is based on the JSON Schema Draft 7 specification. For more information, see https://json-schema.org/specification.html",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "The schema for this JSON document. Should point to the canonical URL for this document.",
      "default": "http://json.openmrs.org/form.schema.json"
    },
    "name": {
      "type": "string",
      "description": "Name of the form"
    },
    "uuid": {
      "type": "string",
      "description": "Unique identifier of the form. Autogenerated by the system",
      "default": "XXXX"
    },
    "encounterType": {
      "type": "string",
      "description": "The encounter type UUID that represents the encounter type that the form gets mapped to"
    },
    "pages": {
      "type": "array",
      "description": "An array of all the pages in this form. Pages are the the basic unit of a form. They are used to group related sections and questions together.",
      "properties": {
        "label": {
          "type": "string",
          "description": "The label of the page"
        },
        "sections": {
          "type": "array",
          "description": "An array of all the sections of the page. Sections are used to group related questions together.",
          "properties": {
            "isExpanded": {
              "oneOf": [{ "type": "boolean" }, { "type": "string" }],
              "description": "Either a string or a boolean. \nIf a string value, 'true' means this section should always be rendered in an expanded state, whereas 'false' means it should be rendered in a collapsed state. \nIf a boolean value, true means this section should always be rendered in an expanded state, whereas false means it should be rendered in a collapsed state."
            },
            "label": {
              "type": "string",
              "description": "The label of the section"
            },
            "questions": {
              "type": "array",
              "description": "An array of all the questions in a section. Questions make up the fields of the form",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the question. Should be unique across all questions in the form. Prefer using camelCase for this property."
                },
                "label": {
                  "type": "string",
                  "description": "The question label that is displayed to the user"
                },
                "required": {
                  "type": "boolean",
                  "description": "Determines whether the question is a required field or not. Required fields must be answered before the form can be submitted. They may also get marked with a red asterisk (*) in the UI to denote them as required fields.",
                  "default": false
                },
                "questionOptions": {
                  "type": "object",
                  "description": "Specifies metadata relating the question. These metadata are used to determine how the question is rendered in the UI, and how it is validated among other things.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Determines the datatype that the question accepts. The value of this property should be one of the supported datatypes."
                    },
                    "rendering": {
                      "type": "string",
                      "description": "Determines how the question is rendered in the UI. The value of this property should be one of the supported field types."
                    },
                    "concept": {
                      "type": "string",
                      "description": "The concept UUID of the backing concept for the question. This value should be a valid UUID of a concept that exists in the concept dictionary of your distribution."
                    },
                    "answers": {
                      "type": "array",
                      "description": "An array of all the possible answers for the question.",
                      "properties": {
                        "concept": {
                          "type": "string",
                          "description": "The backing concept UUID of the answer"
                        },
                        "label": {
                          "type": "string",
                          "description": "The label of the answer. This is what is displayed to the user"
                        }
                      },
                      "required": ["concept", "label"]
                    },
                    "conceptMappings": {
                      "type": "array",
                      "description": "The concept mappings associated with an answer",
                      "properties": {
                        "relationship": {
                          "type": "string",
                          "description": "The relationship between concepts"
                        },
                        "type": {
                          "type": "string",
                          "description": "The concept mapping references"
                        },
                        "value": {
                          "type": "string",
                          "description": "The concept reference term value"
                        }
                      }
                    },
                    "calculate": {
                      "type": "object",
                      "description": "Calculate logic of the question",
                      "properties": {
                        "calculateExpression": {
                          "type": "string",
                          "description": "JavaScript expression that determines the value of the question from evaluating a calculation"
                        }
                      }
                    },
                    "min": {
                      "type": "string",
                      "description": "Minimum value of the question"
                    },
                    "max": {
                      "type": "string",
                      "description": "Maximum value of the question"
                    },
                    "minLength": {
                      "type": "string",
                      "description": "Minimum length of the question"
                    },
                    "maxLength": {
                      "type": "string",
                      "description": "Maximum length of the question"
                    }
                  },
                  "required": ["type", "rendering", "answers"]
                },
                "validators": {
                  "type": "array",
                  "description": "An array of all the validators related to a question",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of the validator"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message that is displayed when validation fails"
                    },
                    "allowFutureDates": {
                      "oneOf": [{ "type": "boolean" }, { "type": "string" }],
                      "description": "Either a boolean or a string.\n Determines whether dates in the future are allowed for a date field or not. If set to true or 'true', future dates are allowed. If false or 'false', future dates are not allowed."
                    },
                    "failsWhenExpression": {
                      "type": "string",
                      "description": "A JavaScript expression that determines whether the validation should fail or not"
                    },
                    "warnsWhenExpression": {
                      "type": "string",
                      "description": "A JavaScript expression that determines whether the a warning should be displayed next to the field or not"
                    }
                  }
                },
                "hide": {
                  "type": "object",
                  "description": "An object that contains logic that determines whether a question should be hidden or not",
                  "properties": {
                    "hideWhenExpression": {
                      "type": "string",
                      "description": "JavaScript expression that determines whether a question should be hidden or not. If the expression evaluates to true, the question is hidden. If it evaluates to false, the question is shown."
                    }
                  }
                },
                "historicalExpression": {
                  "type": "string",
                  "description": "JavaScript expression that resolves to a value from a previous encounter, if available. This value can be used to answer the question."
                }
              }
            }
          },
          "required": ["label", "questions"]
        }
      },
      "required": ["label", "sections"]
    },
    "processor": {
      "type": "string",
      "description": "Determines the processor that mediates conversion of data between form data and the OpenMRS API"
    },
    "published": {
      "type": "boolean",
      "description": "Determines whether the form is published or not",
      "default": false
    },
    "retired": {
      "type": "boolean",
      "description": "Determines whether the form is retired or not"
    },
    "version": {
      "type": "string",
      "description": "Determines the version of the form"
    },
    "availableIntents": {
      "type": "string",
      "description": "Determines the intents available for the form"
    },
    "inlineRendering": {
      "type": "string",
      "description": "Determines whether the form is rendered inline or not"
    }
  },
  "required": ["name", "version", "pages", "encounterType"]
}
